import EditSections from "@/components/EditSections";
import NewSection from "@/components/NewSection";
import {
  EditMode,
  SectionEdit,
  Questions,
  SectionVal,
  CTX,
  Quiz,
} from "@/components/types";
import { redirect } from "next/navigation";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";

interface ApiRes {
  message: string;
  newId: number;
  response: {
    owner: string;
    name: string;
  };
}

function QuizSetup() {
  const router = useRouter();
  const [quizState, updateQuiz] = useState<Quiz>({
    owner: {
      ownerName: "",
      quizName: "",
      id: 0,
    },
    Sections: {},
    Questions: {},
  });

  const createQuiz = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const ownerName = e.currentTarget.owner.value;
    const quizName = e.currentTarget.quizName.value;
    console.log(ownerName, quizName);
    const quiz: Quiz = {
      owner: {
        ownerName,
        quizName,
        id: 0,
      },
      Sections: {},
      Questions: {},
    };

    const submitQuiz = async () => {
      const newQuiz = await fetch("http://localhost:4001/initQuiz", {
        method: "POST",
        body: JSON.stringify({
          owner: ownerName,
          name: quizName,
        }),
      });
      const data = await newQuiz.json();
      console.log(data);
      return data;
    };

    submitQuiz()
      .then((data: ApiRes) => {
        router.push(`/setup/${data.newId}`);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  return (
    <div>
      <Head>
        <title>Quiz Set Up</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="md:w-3/12 w-7/12 mx-auto my-5">
        <form onSubmit={(e) => createQuiz(e)}>
          <label htmlFor="owner">Quiz Creator</label>
          <input
            type="text"
            id="owner"
            required
            minLength={3}
            className="bg-red-300 valid:bg-white valid:text-black w-full"
          ></input>
          <label htmlFor="quizName">Quiz Name</label>
          <input
            type="text"
            id="quizName"
            required
            minLength={3}
            className="bg-red-300 valid:bg-white valid:text-black w-full"
          ></input>
          <button type="submit">Submit</button>
        </form>
      </div>
    </div>
  );
}

export default QuizSetup;
